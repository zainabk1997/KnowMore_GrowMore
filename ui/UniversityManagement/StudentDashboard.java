/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.UniversityManagement;

import businesslogic.City;
import businesslogic.Community;
import businesslogic.DB4OUtil.DB4OUtil;
import businesslogic.EcoSystem;
import businesslogic.MealManagement.MealPlan;
import businesslogic.PersonU;
import businesslogic.UniversityManagement.Course;
import businesslogic.UniversityManagement.CourseAssignment;
import businesslogic.UniversityManagement.Degree;
import businesslogic.UniversityManagement.Professor;
import businesslogic.UniversityManagement.StudentMealPlan;
import businesslogic.UniversityManagement.StudentU;
import businesslogic.UniversityManagement.UniversityAdmin;
import businesslogic.helper.StringValidator;
import ui.school.SchoolAdminRole.*;
import java.awt.CardLayout;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import ui.MainJFrame;

/**
 *
 * @author drashtibhingradiya
 */
public class StudentDashboard extends javax.swing.JPanel {

    /**
     * Creates new form DashboardJPanel
     */
    private EcoSystem ecoSystem;
    private StudentU person;

    public StudentDashboard(EcoSystem ecoSystem, StudentU person) {
        initComponents();
        this.ecoSystem = ecoSystem;
        this.person = person;
        populateStudentsTable();
//        populateMealPlanTable();
        setSize(1060, 770);
        workAreaPanel.setVisible(true);
        profilePanel.setVisible(false);
        genderButtonGroup.add(btnMale);
        genderButtonGroup.add(btnFemale);
        genderButtonGroup.add(btnNonBinary);
        populateMealPlanTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        DashboardPanel = new javax.swing.JSplitPane();
        leftPane = new javax.swing.JPanel();
        btnProfile = new javax.swing.JButton();
        btnMealPlan = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        btnCourseRegistration = new javax.swing.JButton();
        rightPane = new javax.swing.JLayeredPane();
        workAreaPanel = new javax.swing.JPanel();
        workAreaPane = new javax.swing.JLabel();
        transcriptPanel = new javax.swing.JPanel();
        studentSplitPane1 = new javax.swing.JSplitPane();
        navigateBackPanel1 = new javax.swing.JPanel();
        btnBackTranscript = new javax.swing.JButton();
        btnLogoutTranscript = new javax.swing.JButton();
        lblTranscriptPanel = new javax.swing.JLabel();
        studentWorkAreaPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTranscripts = new javax.swing.JTable();
        lblCurrentSemester1 = new javax.swing.JLabel();
        comboSemester1 = new javax.swing.JComboBox<>();
        btnView1 = new javax.swing.JButton();
        btnTranscriptRequest = new javax.swing.JButton();
        appointmentPanel = new javax.swing.JPanel();
        studentSplitPane2 = new javax.swing.JSplitPane();
        navigateBackPanel2 = new javax.swing.JPanel();
        btnBackTranscript1 = new javax.swing.JButton();
        btnLogoutTranscript1 = new javax.swing.JButton();
        lblTranscriptPanel1 = new javax.swing.JLabel();
        studentWorkAreaPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTranscripts1 = new javax.swing.JTable();
        lblStudentName = new javax.swing.JLabel();
        txtStudentDegreeAppointment = new javax.swing.JTextField();
        lblPlacementCoordinator = new javax.swing.JLabel();
        lblAppointmentDate = new javax.swing.JLabel();
        txtStudentNameAppointment = new javax.swing.JTextField();
        lblStudentID7 = new javax.swing.JLabel();
        lblCurrentSemester2 = new javax.swing.JLabel();
        lblAppointmentTime = new javax.swing.JLabel();
        comboSemester2 = new javax.swing.JComboBox<>();
        btnViewAppointment = new javax.swing.JButton();
        bntCreateAppointment = new javax.swing.JButton();
        txtCity = new javax.swing.JTextField();
        btnDeleteAppointment = new javax.swing.JButton();
        btnUpdateAppointment = new javax.swing.JButton();
        formattedTime = new javax.swing.JFormattedTextField();
        comboPlacementCoordinator = new javax.swing.JComboBox<>();
        lblCity = new javax.swing.JLabel();
        comboJobs = new javax.swing.JComboBox<>();
        lblRolePreference = new javax.swing.JLabel();
        lblJobs = new javax.swing.JLabel();
        txtJobAssigned = new javax.swing.JTextField();
        dateAppointmentDate = new com.toedter.calendar.JDateChooser();
        coursesPanel = new javax.swing.JPanel();
        studentSplitPane4 = new javax.swing.JSplitPane();
        navigateBackPanel4 = new javax.swing.JPanel();
        btnBackTranscript3 = new javax.swing.JButton();
        btnLogoutTranscript3 = new javax.swing.JButton();
        lblManageCourses = new javax.swing.JLabel();
        studentWorkAreaPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblCourseAssignment = new javax.swing.JTable();
        lblCurrentSemester3 = new javax.swing.JLabel();
        comboStudentSemester = new javax.swing.JComboBox<>();
        btnEnroll = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCoursesStudent = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mealPlanPanel = new javax.swing.JPanel();
        mealSplitPane = new javax.swing.JSplitPane();
        navigateBackPanel5 = new javax.swing.JPanel();
        btnBack1 = new javax.swing.JButton();
        btnLogout1 = new javax.swing.JButton();
        lblManageStudents = new javax.swing.JLabel();
        studentWorkAreaPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblMealPlan = new javax.swing.JTable();
        txtMealPlanID = new javax.swing.JTextField();
        lblMealID = new javax.swing.JLabel();
        lblMealDescription = new javax.swing.JLabel();
        btnChooseMealPlan = new javax.swing.JButton();
        lblMealPlan = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtMealDescription = new javax.swing.JTextArea();
        lblMealType = new javax.swing.JLabel();
        txtMealPlan = new javax.swing.JTextField();
        txtMealType = new javax.swing.JTextField();
        profilePanel = new javax.swing.JPanel();
        studentSplitPane = new javax.swing.JSplitPane();
        navigateBackPanel = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        lblManageStudents1 = new javax.swing.JLabel();
        studentWorkAreaPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        txtFirstName = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        txtSSN = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        btnMale = new javax.swing.JRadioButton();
        btnFemale = new javax.swing.JRadioButton();
        btnNonBinary = new javax.swing.JRadioButton();
        lblSSN = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        lblDateofBirth = new javax.swing.JLabel();
        lblDateofBirth1 = new javax.swing.JLabel();
        txtStudentID = new javax.swing.JTextField();
        passwordFieldStudent = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        lblStudentID = new javax.swing.JLabel();
        lblStudentDegreeLevel = new javax.swing.JLabel();
        lblGraduationYear = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtGradYear = new javax.swing.JTextField();
        lblStudentMajor = new javax.swing.JLabel();
        txtStudentMajor1 = new javax.swing.JTextField();
        comboDegreeLevel = new javax.swing.JComboBox<>();
        lblCommunity = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        txtUniversityID = new javax.swing.JTextField();
        lblUniversityID = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();

        leftPane.setBackground(new java.awt.Color(0, 153, 153));

        btnProfile.setText("Manage Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        btnMealPlan.setText("Meal Plan");
        btnMealPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMealPlanActionPerformed(evt);
            }
        });

        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnCourseRegistration.setText("Register for Courses");
        btnCourseRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCourseRegistrationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPaneLayout = new javax.swing.GroupLayout(leftPane);
        leftPane.setLayout(leftPaneLayout);
        leftPaneLayout.setHorizontalGroup(
            leftPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMealPlan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCourseRegistration, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftPaneLayout.setVerticalGroup(
            leftPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPaneLayout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(btnProfile)
                .addGap(18, 18, 18)
                .addComponent(btnCourseRegistration)
                .addGap(18, 18, 18)
                .addComponent(btnMealPlan)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut)
                .addContainerGap(659, Short.MAX_VALUE))
        );

        DashboardPanel.setLeftComponent(leftPane);

        rightPane.setLayout(new java.awt.CardLayout());

        workAreaPanel.setBackground(new java.awt.Color(255, 255, 255));
        workAreaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workAreaPane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/blue.jpeg"))); // NOI18N
        workAreaPanel.add(workAreaPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 870));

        rightPane.add(workAreaPanel, "card2");

        studentSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        navigateBackPanel1.setBackground(new java.awt.Color(0, 0, 0));

        btnBackTranscript.setText("Back");

        btnLogoutTranscript.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnLogoutTranscript.setText("Log Out");
        btnLogoutTranscript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutTranscriptActionPerformed(evt);
            }
        });

        lblTranscriptPanel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTranscriptPanel.setForeground(new java.awt.Color(255, 255, 255));
        lblTranscriptPanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTranscriptPanel.setText("View Grades");

        javax.swing.GroupLayout navigateBackPanel1Layout = new javax.swing.GroupLayout(navigateBackPanel1);
        navigateBackPanel1.setLayout(navigateBackPanel1Layout);
        navigateBackPanel1Layout.setHorizontalGroup(
            navigateBackPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBackTranscript)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 310, Short.MAX_VALUE)
                .addComponent(lblTranscriptPanel)
                .addGap(236, 236, 236)
                .addComponent(btnLogoutTranscript)
                .addGap(48, 48, 48))
        );
        navigateBackPanel1Layout.setVerticalGroup(
            navigateBackPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(navigateBackPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackTranscript)
                    .addComponent(btnLogoutTranscript)
                    .addComponent(lblTranscriptPanel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentSplitPane1.setTopComponent(navigateBackPanel1);

        studentWorkAreaPanel1.setBackground(new java.awt.Color(37, 150, 190));

        tblTranscripts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Professor Name", "Course ID", "Course Description", "Course Name", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTranscripts);

        lblCurrentSemester1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblCurrentSemester1.setText("Current Semester");

        comboSemester1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Semester", "Fall 2022", "Winter 2022", "Spring 2023", "Summer 2023", "Fall 2023", "Winter 2023", "Spring 2024", "Summer 2024", "Fall 2024", "Winter 2024", " " }));

        btnView1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnView1.setText("VIEW");

        btnTranscriptRequest.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnTranscriptRequest.setText("REQUEST GRADES");

        javax.swing.GroupLayout studentWorkAreaPanel1Layout = new javax.swing.GroupLayout(studentWorkAreaPanel1);
        studentWorkAreaPanel1.setLayout(studentWorkAreaPanel1Layout);
        studentWorkAreaPanel1Layout.setHorizontalGroup(
            studentWorkAreaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(studentWorkAreaPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblCurrentSemester1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(studentWorkAreaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentWorkAreaPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(comboSemester1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentWorkAreaPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnView1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTranscriptRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        studentWorkAreaPanel1Layout.setVerticalGroup(
            studentWorkAreaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentWorkAreaPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(studentWorkAreaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSemester1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrentSemester1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(studentWorkAreaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTranscriptRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(605, Short.MAX_VALUE))
        );

        studentSplitPane1.setRightComponent(studentWorkAreaPanel1);

        javax.swing.GroupLayout transcriptPanelLayout = new javax.swing.GroupLayout(transcriptPanel);
        transcriptPanel.setLayout(transcriptPanelLayout);
        transcriptPanelLayout.setHorizontalGroup(
            transcriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transcriptPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(studentSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        transcriptPanelLayout.setVerticalGroup(
            transcriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        rightPane.add(transcriptPanel, "card3");

        studentSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        navigateBackPanel2.setBackground(new java.awt.Color(0, 0, 0));

        btnBackTranscript1.setText("Back");

        btnLogoutTranscript1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnLogoutTranscript1.setText("Log Out");

        lblTranscriptPanel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTranscriptPanel1.setForeground(new java.awt.Color(255, 255, 255));
        lblTranscriptPanel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTranscriptPanel1.setText("Manage Placement Coordinator Appointments");

        javax.swing.GroupLayout navigateBackPanel2Layout = new javax.swing.GroupLayout(navigateBackPanel2);
        navigateBackPanel2.setLayout(navigateBackPanel2Layout);
        navigateBackPanel2Layout.setHorizontalGroup(
            navigateBackPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBackTranscript1)
                .addGap(127, 127, 127)
                .addComponent(lblTranscriptPanel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(btnLogoutTranscript1)
                .addGap(48, 48, 48))
        );
        navigateBackPanel2Layout.setVerticalGroup(
            navigateBackPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(navigateBackPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackTranscript1)
                    .addComponent(btnLogoutTranscript1)
                    .addComponent(lblTranscriptPanel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentSplitPane2.setTopComponent(navigateBackPanel2);

        studentWorkAreaPanel2.setBackground(new java.awt.Color(37, 150, 190));

        tblTranscripts1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Degree", "Semester", "Placement Coordinator", "Appointment Details", "Appointment Time", "City for Job", "Role Preference"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblTranscripts1);
        if (tblTranscripts1.getColumnModel().getColumnCount() > 0) {
            tblTranscripts1.getColumnModel().getColumn(7).setHeaderValue("City for Job");
            tblTranscripts1.getColumnModel().getColumn(8).setHeaderValue("Role Preference");
        }

        lblStudentName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblStudentName.setText("Student Name");

        txtStudentDegreeAppointment.setEditable(false);
        txtStudentDegreeAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentDegreeAppointmentActionPerformed(evt);
            }
        });

        lblPlacementCoordinator.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblPlacementCoordinator.setText("Placement Coordinator");

        lblAppointmentDate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblAppointmentDate.setText("Appointment Date");

        txtStudentNameAppointment.setEditable(false);
        txtStudentNameAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentNameAppointmentActionPerformed(evt);
            }
        });

        lblStudentID7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblStudentID7.setText("Student Degree");

        lblCurrentSemester2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblCurrentSemester2.setText("Current Semester");

        lblAppointmentTime.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblAppointmentTime.setText("Appointment Time");

        comboSemester2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Semester", "Fall 2022", "Winter 2022", "Spring 2023", "Summer 2023", "Fall 2023", "Winter 2023", "Spring 2024", "Summer 2024", "Fall 2024", "Winter 2024", " " }));

        btnViewAppointment.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnViewAppointment.setText("VIEW");

        bntCreateAppointment.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bntCreateAppointment.setText("SAVE");

        txtCity.setEditable(false);
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        btnDeleteAppointment.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnDeleteAppointment.setText("DELETE");
        btnDeleteAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAppointmentActionPerformed(evt);
            }
        });

        btnUpdateAppointment.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnUpdateAppointment.setText("UPDATE");
        btnUpdateAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAppointmentActionPerformed(evt);
            }
        });

        formattedTime.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        formattedTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        formattedTime.setText("HH:MM AM/PM Format");

        comboPlacementCoordinator.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Coordinator" }));

        lblCity.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblCity.setText("City for Job");

        comboJobs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Interest", "Data Management", "Software Development" }));

        lblRolePreference.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblRolePreference.setText("Student Interst");

        lblJobs.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblJobs.setText("Job Assigned");

        txtJobAssigned.setEditable(false);
        txtJobAssigned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJobAssignedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentWorkAreaPanel2Layout = new javax.swing.GroupLayout(studentWorkAreaPanel2);
        studentWorkAreaPanel2.setLayout(studentWorkAreaPanel2Layout);
        studentWorkAreaPanel2Layout.setHorizontalGroup(
            studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(studentWorkAreaPanel2Layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentWorkAreaPanel2Layout.createSequentialGroup()
                        .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPlacementCoordinator, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAppointmentTime, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                            .addComponent(comboPlacementCoordinator, 0, 243, Short.MAX_VALUE)
                            .addComponent(txtStudentNameAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formattedTime, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                            .addComponent(dateAppointmentDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentWorkAreaPanel2Layout.createSequentialGroup()
                        .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentWorkAreaPanel2Layout.createSequentialGroup()
                                .addComponent(lblRolePreference, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(69, 69, 69))
                            .addGroup(studentWorkAreaPanel2Layout.createSequentialGroup()
                                .addComponent(lblJobs, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboJobs, 0, 243, Short.MAX_VALUE)
                            .addComponent(txtJobAssigned))
                        .addGap(227, 227, 227))))
            .addGroup(studentWorkAreaPanel2Layout.createSequentialGroup()
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentWorkAreaPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblCurrentSemester2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboSemester2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblStudentID7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtStudentDegreeAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentWorkAreaPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bntCreateAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnUpdateAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(btnDeleteAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        studentWorkAreaPanel2Layout.setVerticalGroup(
            studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentWorkAreaPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentSemester2)
                    .addComponent(comboSemester2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStudentID7)
                    .addComponent(txtStudentDegreeAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentName)
                    .addComponent(txtStudentNameAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPlacementCoordinator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlacementCoordinator))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAppointmentDate)
                    .addComponent(dateAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formattedTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAppointmentTime))
                .addGap(28, 28, 28)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity))
                .addGap(21, 21, 21)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboJobs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRolePreference))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJobs)
                    .addComponent(txtJobAssigned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntCreateAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(264, Short.MAX_VALUE))
        );

        studentSplitPane2.setRightComponent(studentWorkAreaPanel2);

        javax.swing.GroupLayout appointmentPanelLayout = new javax.swing.GroupLayout(appointmentPanel);
        appointmentPanel.setLayout(appointmentPanelLayout);
        appointmentPanelLayout.setHorizontalGroup(
            appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appointmentPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(studentSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        appointmentPanelLayout.setVerticalGroup(
            appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentSplitPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        rightPane.add(appointmentPanel, "card3");

        studentSplitPane4.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        navigateBackPanel4.setBackground(new java.awt.Color(0, 0, 0));

        btnBackTranscript3.setText("Back");

        btnLogoutTranscript3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnLogoutTranscript3.setText("Log Out");
        btnLogoutTranscript3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutTranscript3ActionPerformed(evt);
            }
        });

        lblManageCourses.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblManageCourses.setForeground(new java.awt.Color(255, 255, 255));
        lblManageCourses.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageCourses.setText("Register for Courses");

        javax.swing.GroupLayout navigateBackPanel4Layout = new javax.swing.GroupLayout(navigateBackPanel4);
        navigateBackPanel4.setLayout(navigateBackPanel4Layout);
        navigateBackPanel4Layout.setHorizontalGroup(
            navigateBackPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBackTranscript3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                .addComponent(lblManageCourses)
                .addGap(236, 236, 236)
                .addComponent(btnLogoutTranscript3)
                .addGap(48, 48, 48))
        );
        navigateBackPanel4Layout.setVerticalGroup(
            navigateBackPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(navigateBackPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackTranscript3)
                    .addComponent(btnLogoutTranscript3)
                    .addComponent(lblManageCourses))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentSplitPane4.setTopComponent(navigateBackPanel4);

        studentWorkAreaPanel4.setBackground(new java.awt.Color(37, 150, 190));

        tblCourseAssignment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course ID", "Professor Name", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblCourseAssignment);

        lblCurrentSemester3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblCurrentSemester3.setText("Current Semester");

        comboStudentSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Semester", "Fall 2022", "Winter 2022", "Spring 2023", "Summer 2023", "Fall 2023", "Winter 2023", "Spring 2024", "Summer 2024", "Fall 2024", "Winter 2024", " " }));
        comboStudentSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStudentSemesterActionPerformed(evt);
            }
        });

        btnEnroll.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnEnroll.setText("ENROLL");
        btnEnroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnrollActionPerformed(evt);
            }
        });

        tblCoursesStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Student Major", "Current Semester", "Course ID", "Course Name", "Course Description", "Professor Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tblCoursesStudent);
        if (tblCoursesStudent.getColumnModel().getColumnCount() > 0) {
            tblCoursesStudent.getColumnModel().getColumn(0).setHeaderValue("Student Major");
            tblCoursesStudent.getColumnModel().getColumn(1).setHeaderValue("Current Semester");
            tblCoursesStudent.getColumnModel().getColumn(3).setHeaderValue("Course Name");
            tblCoursesStudent.getColumnModel().getColumn(4).setHeaderValue("Course Description");
        }

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COURSE ENROLLMENTS");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("COURSES LIST");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout studentWorkAreaPanel4Layout = new javax.swing.GroupLayout(studentWorkAreaPanel4);
        studentWorkAreaPanel4.setLayout(studentWorkAreaPanel4Layout);
        studentWorkAreaPanel4Layout.setHorizontalGroup(
            studentWorkAreaPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentWorkAreaPanel4Layout.createSequentialGroup()
                .addGroup(studentWorkAreaPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentWorkAreaPanel4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblCurrentSemester3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(comboStudentSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 420, Short.MAX_VALUE))
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane8)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(studentWorkAreaPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentWorkAreaPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(330, 330, 330))
        );
        studentWorkAreaPanel4Layout.setVerticalGroup(
            studentWorkAreaPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentWorkAreaPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(studentWorkAreaPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboStudentSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrentSemester3))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );

        studentSplitPane4.setRightComponent(studentWorkAreaPanel4);

        javax.swing.GroupLayout coursesPanelLayout = new javax.swing.GroupLayout(coursesPanel);
        coursesPanel.setLayout(coursesPanelLayout);
        coursesPanelLayout.setHorizontalGroup(
            coursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, coursesPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(studentSplitPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        coursesPanelLayout.setVerticalGroup(
            coursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentSplitPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        rightPane.add(coursesPanel, "card3");

        mealSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        navigateBackPanel5.setBackground(new java.awt.Color(0, 0, 0));

        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        btnLogout1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnLogout1.setText("Log Out");
        btnLogout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout1ActionPerformed(evt);
            }
        });

        lblManageStudents.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblManageStudents.setForeground(new java.awt.Color(255, 255, 255));
        lblManageStudents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageStudents.setText("Choose Meals");

        javax.swing.GroupLayout navigateBackPanel5Layout = new javax.swing.GroupLayout(navigateBackPanel5);
        navigateBackPanel5.setLayout(navigateBackPanel5Layout);
        navigateBackPanel5Layout.setHorizontalGroup(
            navigateBackPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBack1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 297, Short.MAX_VALUE)
                .addComponent(lblManageStudents)
                .addGap(236, 236, 236)
                .addComponent(btnLogout1)
                .addGap(48, 48, 48))
        );
        navigateBackPanel5Layout.setVerticalGroup(
            navigateBackPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(navigateBackPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack1)
                    .addComponent(btnLogout1)
                    .addComponent(lblManageStudents))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mealSplitPane.setTopComponent(navigateBackPanel5);

        studentWorkAreaPanel5.setBackground(new java.awt.Color(37, 150, 190));

        tblMealPlan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Meal Plan", "Meal Plan Description", "Meal Plan Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblMealPlan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMealPlanMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblMealPlan);

        txtMealPlanID.setEditable(false);

        lblMealID.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblMealID.setText("Meal ID");

        lblMealDescription.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblMealDescription.setText("Meal Description");

        btnChooseMealPlan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnChooseMealPlan.setText("CHOOSE MEAL PLAN");
        btnChooseMealPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseMealPlanActionPerformed(evt);
            }
        });

        lblMealPlan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblMealPlan.setText("Meal Plan");

        txtMealDescription.setEditable(false);
        txtMealDescription.setColumns(20);
        txtMealDescription.setRows(5);
        jScrollPane7.setViewportView(txtMealDescription);

        lblMealType.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblMealType.setText("Meal Type");

        txtMealPlan.setEditable(false);

        txtMealType.setEditable(false);

        javax.swing.GroupLayout studentWorkAreaPanel5Layout = new javax.swing.GroupLayout(studentWorkAreaPanel5);
        studentWorkAreaPanel5.setLayout(studentWorkAreaPanel5Layout);
        studentWorkAreaPanel5Layout.setHorizontalGroup(
            studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentWorkAreaPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentWorkAreaPanel5Layout.createSequentialGroup()
                        .addGroup(studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMealID, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMealDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMealPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMealType, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMealPlanID)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtMealPlan)
                            .addComponent(txtMealType)))
                    .addComponent(btnChooseMealPlan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
        );
        studentWorkAreaPanel5Layout.setVerticalGroup(
            studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentWorkAreaPanel5Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMealPlanID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMealID))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMealPlan)
                    .addComponent(txtMealPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMealType)
                    .addComponent(txtMealType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(studentWorkAreaPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMealDescription))
                .addGap(18, 18, 18)
                .addComponent(btnChooseMealPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(387, Short.MAX_VALUE))
        );

        mealSplitPane.setRightComponent(studentWorkAreaPanel5);

        javax.swing.GroupLayout mealPlanPanelLayout = new javax.swing.GroupLayout(mealPlanPanel);
        mealPlanPanel.setLayout(mealPlanPanelLayout);
        mealPlanPanelLayout.setHorizontalGroup(
            mealPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mealPlanPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mealSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        mealPlanPanelLayout.setVerticalGroup(
            mealPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mealSplitPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        rightPane.add(mealPlanPanel, "card3");

        studentSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        navigateBackPanel.setBackground(new java.awt.Color(0, 0, 0));

        btnBack.setText("Back");

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblManageStudents1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblManageStudents1.setForeground(new java.awt.Color(255, 255, 255));
        lblManageStudents1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageStudents1.setText("Update Profile");

        javax.swing.GroupLayout navigateBackPanelLayout = new javax.swing.GroupLayout(navigateBackPanel);
        navigateBackPanel.setLayout(navigateBackPanelLayout);
        navigateBackPanelLayout.setHorizontalGroup(
            navigateBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 297, Short.MAX_VALUE)
                .addComponent(lblManageStudents1)
                .addGap(236, 236, 236)
                .addComponent(btnLogout)
                .addGap(48, 48, 48))
        );
        navigateBackPanelLayout.setVerticalGroup(
            navigateBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigateBackPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(navigateBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnLogout)
                    .addComponent(lblManageStudents1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentSplitPane.setTopComponent(navigateBackPanel);

        studentWorkAreaPanel.setBackground(new java.awt.Color(37, 150, 190));

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Student Name", "Student ID", "Email Address", "Gender", "Community", "Phone Number", "Degree Level", "Major"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudents);

        txtEmailAddress.setEditable(false);

        lblFirstName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblFirstName.setText("Name");

        lblEmailAddress.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblEmailAddress.setText("Email Address");

        lblGender.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblGender.setText("Gender");

        btnMale.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnMale.setText("Male");

        btnFemale.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnFemale.setText("Female");

        btnNonBinary.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnNonBinary.setText("Non Binary");

        lblSSN.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblSSN.setText("SSN");

        txtPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNumberActionPerformed(evt);
            }
        });

        lblDateofBirth.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblDateofBirth.setText("Date of Birth");

        lblDateofBirth1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblDateofBirth1.setText("Phone Number");

        txtStudentID.setEditable(false);
        txtStudentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentIDActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblPassword.setText("Password");

        lblStudentID.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblStudentID.setText("Student ID");

        lblStudentDegreeLevel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblStudentDegreeLevel.setText("Degree Level");

        lblGraduationYear.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblGraduationYear.setText("Graduation Year");

        btnView.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnView.setText("VIEW");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblStudentMajor.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblStudentMajor.setText("Student Major");

        txtStudentMajor1.setEditable(false);
        txtStudentMajor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentMajor1ActionPerformed(evt);
            }
        });

        comboDegreeLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Level", "Undergraduate", "Graduate" }));
        comboDegreeLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDegreeLevelActionPerformed(evt);
            }
        });

        lblCommunity.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblCommunity.setText("Community");

        txtCommunity.setInputVerifier(new StringValidator());

        txtUniversityID.setEditable(false);

        lblUniversityID.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblUniversityID.setText("University ID");

        javax.swing.GroupLayout studentWorkAreaPanelLayout = new javax.swing.GroupLayout(studentWorkAreaPanel);
        studentWorkAreaPanel.setLayout(studentWorkAreaPanelLayout);
        studentWorkAreaPanelLayout.setHorizontalGroup(
            studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentWorkAreaPanelLayout.createSequentialGroup()
                .addGap(0, 313, Short.MAX_VALUE)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(303, 303, 303))
            .addGroup(studentWorkAreaPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentWorkAreaPanelLayout.createSequentialGroup()
                        .addComponent(lblUniversityID, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtUniversityID, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(studentWorkAreaPanelLayout.createSequentialGroup()
                        .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSSN, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtEmailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtFirstName)
                            .addGroup(studentWorkAreaPanelLayout.createSequentialGroup()
                                .addComponent(btnMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFemale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNonBinary))
                            .addComponent(txtCommunity)
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStudentDegreeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStudentMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGraduationYear, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateofBirth1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStudentMajor1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDegreeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                .addComponent(txtStudentID, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                .addComponent(passwordFieldStudent))
                            .addComponent(txtGradYear, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))))
        );
        studentWorkAreaPanelLayout.setVerticalGroup(
            studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentWorkAreaPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstName)
                    .addComponent(lblDateofBirth1)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordFieldStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword)
                    .addComponent(lblCommunity)
                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAddress)
                    .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStudentID))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(btnMale)
                    .addComponent(btnFemale)
                    .addComponent(btnNonBinary)
                    .addComponent(lblStudentDegreeLevel)
                    .addComponent(comboDegreeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSSN)
                    .addComponent(lblStudentMajor)
                    .addComponent(txtStudentMajor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDateofBirth)
                    .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGradYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblGraduationYear))
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUniversityID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUniversityID))
                .addGap(37, 37, 37)
                .addGroup(studentWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        studentSplitPane.setRightComponent(studentWorkAreaPanel);

        javax.swing.GroupLayout profilePanelLayout = new javax.swing.GroupLayout(profilePanel);
        profilePanel.setLayout(profilePanelLayout);
        profilePanelLayout.setHorizontalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profilePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(studentSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        profilePanelLayout.setVerticalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentSplitPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        rightPane.add(profilePanel, "card3");

        DashboardPanel.setRightComponent(rightPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DashboardPanel))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void txtStudentDegreeAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentDegreeAppointmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentDegreeAppointmentActionPerformed

    private void txtStudentNameAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentNameAppointmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentNameAppointmentActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void btnDeleteAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAppointmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteAppointmentActionPerformed

    private void btnUpdateAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAppointmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateAppointmentActionPerformed

    private void txtJobAssignedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJobAssignedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJobAssignedActionPerformed

    private void comboStudentSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStudentSemesterActionPerformed
        // TODO add your handling code here:

//        if(comboStudentSemester.getSelectedItem()!=null){
//            String currentSemester = (String)comboSemester3.getSelectedItem();
//            if(!currentSemester,equalsIgnoreCase("Select Semester")){
//                List<Course> courseBySem = UniversityAdmin.courseDirectoryRef.getCourseDirectory().stream().filter.(c -> c.)
//            }
//            
//        }
//
//        }
        if (comboStudentSemester.getSelectedItem() != null) {
            String currentSemester = comboStudentSemester.getSelectedItem().toString();
            System.out.println(currentSemester);
            if (!currentSemester.equalsIgnoreCase("Select Semester")) {
                System.out.println("Populaating courses");
                List<Course> courseBySem = ecoSystem.getCourseDirectoryRef().getCourseDirectory()
                        .stream().filter(c -> c.getSemester().equalsIgnoreCase(currentSemester)).toList();
                courseBySem.forEach(course -> System.out.println(course.getCourseName()));
                populateCoursesTable(courseBySem);
            }
        }

    }//GEN-LAST:event_comboStudentSemesterActionPerformed

    private void btnEnrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnrollActionPerformed
        // TODO add your handling code here:

        int selected = tblCoursesStudent.getSelectedRow();

        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to enroll!");
            return;
        }

        Course course = ecoSystem.getCourseDirectoryRef().getCourseDirectory().get(selected);

        int courseID = course.getCourseID();
        String professorName = course.getProfessorName();
        String studentID = person.getStudentID();

        List<Integer> courseIDList = ecoSystem.getCourseAssignmentRef().getCourseAssignmentDirectory()
                .stream().filter(c -> c.getStudentID().equals(person.getStudentID())).map(c -> c.getCourseID()).toList();

        if (courseIDList.contains(courseID)) {
            JOptionPane.showMessageDialog(this, "Course ID already exists. Please check");
        } else {
            CourseAssignment courseAssignment = new CourseAssignment(
                    studentID, professorName, courseID, 0.00f);

            ecoSystem.getCourseAssignmentRef().getCourseAssignmentDirectory().add(courseAssignment);
            populateCourseAssignmentsTable();
        }
        JOptionPane.showMessageDialog(this, "Course enrolled successfully!");


    }//GEN-LAST:event_btnEnrollActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        switchToWorkAreaPanel();
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnLogout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout1ActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_btnLogout1ActionPerformed

    private void tblMealPlanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMealPlanMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblMealPlanMouseClicked

    private void btnChooseMealPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseMealPlanActionPerformed
        // TODO add your handling code here:
        //        CHOOSE MEAL

        int selected = tblMealPlan.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;
        }

        MealPlan meal = ecoSystem.getMealPlanDirectoryRef().getMealPlanDirectory().get(selected);

        txtMealPlanID.setText(String.valueOf(meal.getMealID()));
        txtMealPlan.setText(meal.getMealPlan());
        txtMealType.setText(meal.getMealType());
        txtMealDescription.setText(meal.getMealDescription());

        StudentMealPlan chosenMeal = new StudentMealPlan(person.getStudentID(), meal.getMealID());

        ecoSystem.getStudentMealPlan().getStudentMealPlanDirectory().add(chosenMeal);

        JOptionPane.showMessageDialog(this, "Meal Plan Added Successfully!");


    }//GEN-LAST:event_btnChooseMealPlanActionPerformed

    private void btnCourseRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCourseRegistrationActionPerformed
        // TODO add your handling code here:

        workAreaPanel.setVisible(false);
        profilePanel.setVisible(false);
        transcriptPanel.setVisible(false);
        coursesPanel.setVisible(true);
        mealPlanPanel.setVisible(false);
        appointmentPanel.setVisible(false);

    }//GEN-LAST:event_btnCourseRegistrationActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        workAreaPanel.setVisible(false);
        profilePanel.setVisible(true);
        transcriptPanel.setVisible(false);
        coursesPanel.setVisible(false);
        mealPlanPanel.setVisible(false);
        appointmentPanel.setVisible(false);
    }//GEN-LAST:event_btnProfileActionPerformed

    private void btnMealPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMealPlanActionPerformed
        // TODO add your handling code here:
        workAreaPanel.setVisible(false);
        profilePanel.setVisible(false);
        transcriptPanel.setVisible(false);
        coursesPanel.setVisible(false);
        mealPlanPanel.setVisible(true);
        appointmentPanel.setVisible(false);
    }//GEN-LAST:event_btnMealPlanActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentsMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblStudentsMouseClicked

    private void txtPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneNumberActionPerformed

    private void txtStudentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentIDActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        //        VIEW STUDENT
        int selected = tblStudents.getSelectedRow();

        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
            return;
        }

        StudentU student = ecoSystem.getStudentDirectoryRef().getStudentDirectory().get(selected);

        txtFirstName.setText(student.getPersonName());
        txtCommunity.setText(student.getCommunity().getCommunity());
        txtEmailAddress.setText(student.getPersonEmailAddress());
        if (student.getPersonGender().equals("Female")) {
            btnFemale.setSelected(true);
            btnMale.setSelected(false);
            btnNonBinary.setSelected(false);
        } else if (student.getPersonGender().equals("Male")) {
            btnMale.setSelected(true);
            btnFemale.setSelected(false);
            btnNonBinary.setSelected(false);
        } else {
            btnNonBinary.setSelected(true);
            btnMale.setSelected(false);
            btnFemale.setSelected(false);
        }
        txtSSN.setText(student.getPersonId());

        dateChooser.setDate(student.getDateOfBirth());
        txtGradYear.setText(student.getGraduationYear());
        txtPhoneNumber.setText(String.valueOf(student.getPersonPhoneNumber()));
        passwordFieldStudent.setText(String.valueOf(student.getUserPassword()));
        txtStudentID.setText(student.getStudentID());
        //        comboDegreeLevel

        comboDegreeLevel.addItem("Undergraduate");
        comboDegreeLevel.addItem("Graduate");

        String degreeLevel = student.getStudentDegree().getDegreeLevel();
        comboDegreeLevel.setSelectedItem(degreeLevel);
        //        comboDegreeLevel.setSelectedItem(student.getStudentDegree().getDegreeLevel());
        txtStudentMajor1.setText(student.getStudentDegree().getMajor());

        //        Community community = new Community("Westland", new City("Boston"));
        txtUniversityID.setText(student.getUniversityID());
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        //        UPDATE STUDENT
        int selected = tblStudents.getSelectedRow();

        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
            return;
        }
        String studentName = txtFirstName.getText();
        String studentCommunity = txtCommunity.getText();
        String studentEmail = txtEmailAddress.getText();
        String studentGender = "";
        if (btnMale.isSelected()) {
            studentGender = "Male";
        } else if (btnFemale.isSelected()) {
            studentGender = "Female";
        } else {
            studentGender = "Non Binary";
        }
        String studentSSN = txtSSN.getText();
        Date dob = dateChooser.getDate();
        String gradYear = txtGradYear.getText();
        long studentPhone = Long.parseLong(txtPhoneNumber.getText());
        String studentPassword = String.valueOf(passwordFieldStudent.getPassword());
        String studentID = txtStudentID.getText();
        String degreeLevel = comboDegreeLevel.getSelectedItem().toString();
        String major = txtStudentMajor1.getText();

        Degree studentDegree = new Degree(degreeLevel, major);
        Community community = new Community(studentCommunity, new City("Boston"));
        String universityID = txtUniversityID.getText();

        StudentU student = ecoSystem.getStudentDirectoryRef().getStudentDirectory().get(selected);

        student.setPersonName(studentName);
        student.setCommunity(community);
        student.setPersonEmailAddress(studentEmail);
        student.setPersonGender(studentGender);
        student.setPersonId(studentSSN);
        student.setDateOfBirth(dob);
        student.setGraduationYear(gradYear);
        student.setPersonPhoneNumber(studentPhone);
        student.setUserPassword(studentPassword);
        student.setStudentID(studentID);
        student.setStudentDegree(studentDegree);
        student.setUniversityID(universityID);

        JOptionPane.showMessageDialog(this, "Student details updated successfully!");
        populateStudentsTable();
        DB4OUtil.getInstance().storeSystem(ecoSystem);

        txtFirstName.setText("");
        txtCommunity.setText("");
        txtEmailAddress.setText("");
        genderButtonGroup.clearSelection();
        txtSSN.setText("");
        dateChooser.setCalendar(null);
        txtGradYear.setText("");
        txtPhoneNumber.setText("");
        passwordFieldStudent.setText("");
        txtStudentID.setText("");
        comboDegreeLevel.removeAllItems();
        txtStudentMajor1.setText("");
        //            lblStudentPhoto
        txtUniversityID.setText("");


    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtStudentMajor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentMajor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentMajor1ActionPerformed

    private void comboDegreeLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDegreeLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDegreeLevelActionPerformed

    private void btnLogoutTranscript3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutTranscript3ActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_btnLogoutTranscript3ActionPerformed

    private void btnLogoutTranscriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutTranscriptActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_btnLogoutTranscriptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane DashboardPanel;
    private javax.swing.JPanel appointmentPanel;
    private javax.swing.JButton bntCreateAppointment;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBackTranscript;
    private javax.swing.JButton btnBackTranscript1;
    private javax.swing.JButton btnBackTranscript3;
    private javax.swing.JButton btnChooseMealPlan;
    private javax.swing.JButton btnCourseRegistration;
    private javax.swing.JButton btnDeleteAppointment;
    private javax.swing.JButton btnEnroll;
    private javax.swing.JRadioButton btnFemale;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnLogout1;
    private javax.swing.JButton btnLogoutTranscript;
    private javax.swing.JButton btnLogoutTranscript1;
    private javax.swing.JButton btnLogoutTranscript3;
    private javax.swing.JRadioButton btnMale;
    private javax.swing.JButton btnMealPlan;
    private javax.swing.JRadioButton btnNonBinary;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnTranscriptRequest;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateAppointment;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnView1;
    private javax.swing.JButton btnViewAppointment;
    private javax.swing.JComboBox<String> comboDegreeLevel;
    private javax.swing.JComboBox<String> comboJobs;
    private javax.swing.JComboBox<String> comboPlacementCoordinator;
    private javax.swing.JComboBox<String> comboSemester1;
    private javax.swing.JComboBox<String> comboSemester2;
    private javax.swing.JComboBox<String> comboStudentSemester;
    private javax.swing.JPanel coursesPanel;
    private com.toedter.calendar.JDateChooser dateAppointmentDate;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JFormattedTextField formattedTime;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lblAppointmentDate;
    private javax.swing.JLabel lblAppointmentTime;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCurrentSemester1;
    private javax.swing.JLabel lblCurrentSemester2;
    private javax.swing.JLabel lblCurrentSemester3;
    private javax.swing.JLabel lblDateofBirth;
    private javax.swing.JLabel lblDateofBirth1;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGraduationYear;
    private javax.swing.JLabel lblJobs;
    private javax.swing.JLabel lblManageCourses;
    private javax.swing.JLabel lblManageStudents;
    private javax.swing.JLabel lblManageStudents1;
    private javax.swing.JLabel lblMealDescription;
    private javax.swing.JLabel lblMealID;
    private javax.swing.JLabel lblMealPlan;
    private javax.swing.JLabel lblMealType;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPlacementCoordinator;
    private javax.swing.JLabel lblRolePreference;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblStudentDegreeLevel;
    private javax.swing.JLabel lblStudentID;
    private javax.swing.JLabel lblStudentID7;
    private javax.swing.JLabel lblStudentMajor;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblTranscriptPanel;
    private javax.swing.JLabel lblTranscriptPanel1;
    private javax.swing.JLabel lblUniversityID;
    private javax.swing.JPanel leftPane;
    private javax.swing.JPanel mealPlanPanel;
    private javax.swing.JSplitPane mealSplitPane;
    private javax.swing.JPanel navigateBackPanel;
    private javax.swing.JPanel navigateBackPanel1;
    private javax.swing.JPanel navigateBackPanel2;
    private javax.swing.JPanel navigateBackPanel4;
    private javax.swing.JPanel navigateBackPanel5;
    private javax.swing.JPasswordField passwordFieldStudent;
    private javax.swing.JPanel profilePanel;
    private javax.swing.JLayeredPane rightPane;
    private javax.swing.JSplitPane studentSplitPane;
    private javax.swing.JSplitPane studentSplitPane1;
    private javax.swing.JSplitPane studentSplitPane2;
    private javax.swing.JSplitPane studentSplitPane4;
    private javax.swing.JPanel studentWorkAreaPanel;
    private javax.swing.JPanel studentWorkAreaPanel1;
    private javax.swing.JPanel studentWorkAreaPanel2;
    private javax.swing.JPanel studentWorkAreaPanel4;
    private javax.swing.JPanel studentWorkAreaPanel5;
    private javax.swing.JTable tblCourseAssignment;
    private javax.swing.JTable tblCoursesStudent;
    private javax.swing.JTable tblMealPlan;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTable tblTranscripts;
    private javax.swing.JTable tblTranscripts1;
    private javax.swing.JPanel transcriptPanel;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtGradYear;
    private javax.swing.JTextField txtJobAssigned;
    private javax.swing.JTextArea txtMealDescription;
    private javax.swing.JTextField txtMealPlan;
    private javax.swing.JTextField txtMealPlanID;
    private javax.swing.JTextField txtMealType;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtStudentDegreeAppointment;
    private javax.swing.JTextField txtStudentID;
    private javax.swing.JTextField txtStudentMajor1;
    private javax.swing.JTextField txtStudentNameAppointment;
    private javax.swing.JTextField txtUniversityID;
    private javax.swing.JLabel workAreaPane;
    private javax.swing.JPanel workAreaPanel;
    // End of variables declaration//GEN-END:variables

    private void populateCoursesTable(List<Course> courses) {

        DefaultTableModel model = (DefaultTableModel) tblCoursesStudent.getModel();
        model.setRowCount(0);
        for (Course course : courses) {
            Object[] rowData = new Object[6];
            rowData[0] = course.getStudentMajor();
            rowData[1] = course.getSemester();
            rowData[2] = course.getCourseID();
            rowData[3] = course.getCourseName();
            rowData[4] = course.getCourseDescription();
            rowData[5] = course.getProfessorName();
            model.addRow(rowData);
        }
    }

    private void populateCourseAssignmentsTable() {

        List<CourseAssignment> courseAssignments = ecoSystem.getCourseAssignmentRef().getCourseAssignmentDirectory()
                .stream()
                .filter(ca -> ca.getStudentID().equals(person.getStudentID()))
                .toList();

        DefaultTableModel model = (DefaultTableModel) tblCourseAssignment.getModel();
        model.setRowCount(0);
        for (CourseAssignment courseAssignment : courseAssignments) {
            Object[] rowData = new Object[3];
            rowData[0] = courseAssignment.getCourseID();
            rowData[1] = courseAssignment.getProfessorName();
            rowData[2] = courseAssignment.getGrade();
            model.addRow(rowData);
        }
    }

    private void switchToWorkAreaPanel() {
        workAreaPanel.setVisible(true);
        mealPlanPanel.setVisible(false);
    }

    private void switchToMainFrame() {
        this.setVisible(false);
        MainJFrame mainFrame = (MainJFrame) SwingUtilities.getRoot(this);
        mainFrame.removeStudentDashboard();
        mainFrame.setVisible(true);
    }

    private void populateStudentsTable() {
        DefaultTableModel model = (DefaultTableModel) tblStudents.getModel();
        model.setRowCount(0);
        for (StudentU student : ecoSystem.getStudentDirectoryRef().getStudentDirectory()) {
            if (student.getUniversityID().equals(person.getUniversityID())) {
                Object[] rowData = new Object[8];
                rowData[0] = student.getPersonName();
                rowData[1] = student.getStudentID();
                rowData[2] = student.getPersonEmailAddress();
                rowData[3] = student.getPersonGender();
                rowData[4] = student.getCommunity().getCommunity();
                rowData[5] = student.getPersonPhoneNumber();
                rowData[6] = student.getStudentDegree().getDegreeLevel();
                rowData[7] = student.getStudentDegree().getMajor();
                model.addRow(rowData);

            }

        }
    }

    private void populateMealPlanTable() {

        DefaultTableModel model = (DefaultTableModel) tblMealPlan.getModel();
        model.setRowCount(0);
        for (MealPlan mealPlan : ecoSystem.getMealPlanDirectoryRef().getMealPlanDirectory()) {
            Object[] rowData = new Object[3];
            rowData[0] = mealPlan.getMealPlan();
            rowData[1] = mealPlan.getMealType();
            rowData[2] = mealPlan.getMealDescription();
            model.addRow(rowData);
        }

    }

}
